package com.example.extarc.androidpushnotification;import com.example.extarc.androidpushnotification.Models.Questionnaire;import com.google.firebase.messaging.FirebaseMessagingService;import com.google.firebase.messaging.RemoteMessage;import com.google.gson.Gson;import android.app.Notification;import android.app.NotificationManager;import android.app.PendingIntent;import android.content.ContentResolver;import android.content.Context;import android.content.Intent;import android.content.SharedPreferences;import android.content.pm.PackageInfo;import android.content.pm.PackageManager;import android.net.Uri;import android.support.v4.app.NotificationCompat;import android.util.Log;public class MyFCMClass extends FirebaseMessagingService {    String TAG = "MyFCMClass";    @Override    public void onNewToken(String token) {        SharedPreferences persistentValues = getSharedPreferences(Constants.SP_PERSISTENT_VALUES, Context.MODE_PRIVATE);        SharedPreferences.Editor editor = persistentValues.edit();        Log.d(TAG, "Putting following GCM into SP: " + token);        editor.putString(Constants.FCM_ID,token);        editor.commit();        super.onNewToken(token);    }    @Override    public void onMessageReceived(RemoteMessage remoteMessage) {        if (remoteMessage.getData().size() > 0) {            // do with Data payload...            // remoteMessage.getData()            Gson gson = new Gson();            super.onMessageReceived(remoteMessage);            Log.d("Msg", "Message received ["+remoteMessage+"]");            Log.d("Msg", "Message received ["+remoteMessage.getData()+"]");           NotificationData notificationDetail = new NotificationData();            notificationDetail.setDetail(remoteMessage.getData().get("detail"));            notificationDetail.setTitle(remoteMessage.getData().get("title"));            notificationDetail.setId(remoteMessage.getData().get("id"));            notificationDetail.setType(remoteMessage.getData().get("type"));            SharedPreferences  persistentValues = getSharedPreferences(Constants.SP_PERSISTENT_VALUES, Context.MODE_PRIVATE);            SharedPreferences.Editor editor = persistentValues.edit();            // Create Notification            Intent intent = new Intent(this, MasterActivity.class);            if(notificationDetail.getType().equalsIgnoreCase("SPDM")){                intent.putExtra("NextFragment", "SPDM");                editor.putString(Constants.SPEED_MATHS,notificationDetail.getId());            }            if(notificationDetail.getType().equalsIgnoreCase("GK")){                intent.putExtra("NextFragment", "GK");                editor.putString(Constants.GK,notificationDetail.getId());            } if(notificationDetail.getType().equalsIgnoreCase("PUZ")){                intent.putExtra("NextFragment", "PUZ");                editor.putString(Constants.PUZZLE,notificationDetail.getId());            } if(notificationDetail.getType().equalsIgnoreCase("WORD")){                intent.putExtra("NextFragment", "WORD");                editor.putString(Constants.WORD_POWER,notificationDetail.getId());            }if(notificationDetail.getType().equalsIgnoreCase("MOT")){                intent.putExtra("NextFragment", "MOT");                editor.putString(Constants.MOTIVATION,notificationDetail.getId());            }            editor.commit();            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);            PendingIntent pendingIntent = PendingIntent.getActivity(this, 1410,                    intent, PendingIntent.FLAG_ONE_SHOT);            NotificationCompat.Builder notificationBuilder = new                    NotificationCompat.Builder(this)                    .setSmallIcon(R.drawable.notification_icon)                    .setContentTitle(notificationDetail.getTitle())                    .setContentText(notificationDetail.getDetail())                    .setAutoCancel(true)                    .setPriority(Notification.PRIORITY_MAX)                    .setContentIntent(pendingIntent)                    .setSound(Uri.parse(ContentResolver.SCHEME_ANDROID_RESOURCE                            + "://" + getApplicationContext().getPackageName() + "/raw/notify"));            NotificationManager notificationManager =                    (NotificationManager)                            getSystemService(this.NOTIFICATION_SERVICE);            notificationManager.notify(1410, notificationBuilder.build());        }    }}