package com.example.extarc.androidpushnotification;import com.google.firebase.messaging.FirebaseMessagingService;import com.google.firebase.messaging.RemoteMessage;import android.app.Notification;import android.app.NotificationManager;import android.app.PendingIntent;import android.content.Context;import android.content.Intent;import android.content.SharedPreferences;import android.content.pm.PackageInfo;import android.content.pm.PackageManager;import android.support.v4.app.NotificationCompat;import android.util.Log;public class MyFCMClass extends FirebaseMessagingService {    String TAG = "MyFCMClass";    @Override    public void onNewToken(String token) {        SharedPreferences persistentValues = getSharedPreferences(Constants.SP_PERSISTENT_VALUES, Context.MODE_PRIVATE);        SharedPreferences.Editor editor = persistentValues.edit();        Log.d(TAG, "Putting following GCM into SP: " + token);        editor.putString(Constants.FCM_ID,token);        editor.commit();        super.onNewToken(token);    }    @Override    public void onMessageReceived(RemoteMessage remoteMessage) {        Log.i("JobSeeker", remoteMessage.getNotification().getBody());        if (remoteMessage.getNotification() != null) {            super.onMessageReceived(remoteMessage);            Log.d("Msg", "Message received ["+remoteMessage+"]");            // Create Notification            Intent intent = new Intent(this, MainActivity.class);            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);            PendingIntent pendingIntent = PendingIntent.getActivity(this, 1410,                    intent, PendingIntent.FLAG_ONE_SHOT);            NotificationCompat.Builder notificationBuilder = new                    NotificationCompat.Builder(this)                    .setSmallIcon(R.drawable.notification)                    .setContentTitle("Message")                    .setContentText(remoteMessage.getNotification().getBody())                    .setAutoCancel(true)                    .setPriority(Notification.PRIORITY_MAX)                    .setContentIntent(pendingIntent);            NotificationManager notificationManager =                    (NotificationManager)                            getSystemService(this.NOTIFICATION_SERVICE);            notificationManager.notify(1410, notificationBuilder.build());        }        if (remoteMessage.getData().size() > 0) {            // do with Data payload...            // remoteMessage.getData()            super.onMessageReceived(remoteMessage);            Log.d("Msg", "Message received ["+remoteMessage+"]");            // Create Notification            Intent intent = new Intent(this, MainActivity.class);            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);            PendingIntent pendingIntent = PendingIntent.getActivity(this, 1410,                    intent, PendingIntent.FLAG_ONE_SHOT);            NotificationCompat.Builder notificationBuilder = new                    NotificationCompat.Builder(this)                    .setSmallIcon(R.drawable.notification)                    .setContentTitle("Message")                    .setContentText(remoteMessage.getNotification().getBody())                    .setAutoCancel(true)                    .setPriority(Notification.PRIORITY_MAX)                    .setContentIntent(pendingIntent);            NotificationManager notificationManager =                    (NotificationManager)                            getSystemService(this.NOTIFICATION_SERVICE);            notificationManager.notify(1410, notificationBuilder.build());        }    }}